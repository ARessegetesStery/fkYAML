name: Ubuntu

on:
  push:
    branches:
      - develop
      - main
      - release/*
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{github.workflow}}-${{github.ref || github.run_id}}
  cancel-in-progress: true

jobs:
  ubuntu-latest:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [ Debug, Release ]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build_${{matrix.build_type}} -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DFK_YAML_BUILD_TEST=ON

    - name: Build
      run: cmake --build ${{github.workspace}}/build_${{matrix.build_type}} --config ${{matrix.build_type}}

    - name: Test
      working-directory: ${{github.workspace}}/build_${{matrix.build_type}}
      run: ctest -C ${{matrix.build_type}} --output-on-failure

  ci-clang_tidy_check:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build_clang_tidy -DFK_YAML_RUN_CLANG_TIDY=ON

    - name: Clang-Tidy check
      run: cmake --build ${{github.workspace}}/build_clang_tidy --target run_clang_tidy

  valgrind_memory_leak_test:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install Valgrind
      run: |
        sudo apt install -y valgrind
        valgrind --version

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build_valgrind -DCMAKE_BUILD_TYPE=Debug -DFK_YAML_BUILD_TEST=ON -DFK_YAML_RUN_VALGRIND=ON

    - name: Build
      run: cmake --build ${{github.workspace}}/build_valgrind --config Debug

    - name: Memory Leak Check with Valgrind
      working-directory: ${{github.workspace}}/build_valgrind
      run: ctest -C Debug -T memcheck

  clang-tests-with-self-hosted-runner:
    runs-on: [self-hosted, Linux, X64, clang]
    strategy:
      matrix:
        target:
          - ci_test_compiler_clang++-11
          - ci_test_compiler_clang++-12
          - ci_test_compiler_clang++-13
          - ci_test_compiler_clang++-14
          - ci_test_compiler_clang++-15
          - ci_test_clang++_c++11
          - ci_test_clang++_c++14
          - ci_test_clang++_c++17
          - ci_test_clang++_c++20
          - ci_test_clang++_c++23
          - ci_test_clang++_sanitizer
          - ci_test_iwyu

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DFK_YAML_CI=ON

      - name: Run builds & tests for the test target
        run: |
          cmake --build ${{github.workspace}}/build --target ${{matrix.target}}

  ci_test_gcc_cxx_versions:
    runs-on: ubuntu-latest
    container: gcc:latest
    strategy:
      matrix:
        cxx_standard: [ "11", "14", "17", "20", "23" ]
        build_type: [ Debug, Release ]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Get latest CMake
        uses: lukka/get-cmake@latest

      - name: Install package for test
        run: |
          cmake -B ${{github.workspace}}/build_for_package
          cmake --build ${{github.workspace}}/build_for_package --target install
          rm -rf ${{github.workspace}}/build_for_package

      - name: Configure CMake and Ninja
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DFK_YAML_BUILD_ALL_TEST=ON -DFK_YAML_TEST_TARGET_CXX_STANDARD=${{matrix.cxx_standard}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

      - name: Test
        run: ctest -C ${{matrix.build_type}} --output-on-failure

  ci_test_gcc_versions:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [ "4.8", "5", "6", "7", "8", "9", "10", "11", "12", "13", latest ]
        build_type: [ Debug, Release ]
    container: gcc:${{matrix.compiler}}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Get latest CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Install package for test
        run: |
          cmake -B ${{github.workspace}}/build_for_package
          cmake --build ${{github.workspace}}/build_for_package --target install
          rm -rf ${{github.workspace}}/build_for_package

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DFK_YAML_BUILD_ALL_TEST=ON

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

      - name: Test
        run: ctest -C ${{matrix.build_type}} --output-on-failure
